{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bunny\\\\OneDrive\\\\Desktop\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\Main\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./styles.module.css\";\nimport _, { set } from 'lodash';\nimport { Button, Card, Divider, Header, Icon, Image, Modal, Placeholder } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  const [loading, setLoading] = useState(false);\n  const [voteForA, setVoteForA] = useState(0);\n  const [voteForB, setVoteForB] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openVoted, setOpenVoted] = useState(false);\n  const cards = [{\n    \"id\": 1,\n    \"dishName\": \"Lasagne\",\n    \"description\": \"Breaded fried chicken with waffles, and a side of maple syrup.\",\n    \"image\": \"https://loremflickr.com/300/300/food\"\n  }, {\n    \"id\": 2,\n    \"dishName\": \"Pho\",\n    \"description\": \"Three eggs with cilantro, tomatoes, onions, avocados and melted Emmental cheese. With a side of roasted potatoes, and your choice of toast or croissant.\",\n    \"image\": \"https://loremflickr.com/300/300/food\"\n  }]; //   useEffect(()=>{\n  // \t  fetch('https://raw.githubusercontent.com/syook/react-dishpoll/main/db.json')\n  // \t       .then(response =>response.json())\n  // \t\t   .then(data=>setCards(data))\n  //   })\n\n  const handleLoadingClick = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_container,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Syook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [voteForA, \" - \", voteForB]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n        doubling: true,\n        itemsPerRow: 3,\n        stackable: true,\n        children: _.map(cards, card => /*#__PURE__*/_jsxDEV(Card, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(Placeholder, {\n            children: /*#__PURE__*/_jsxDEV(Placeholder.Image, {\n              square: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Image, {\n            src: card.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: loading ? /*#__PURE__*/_jsxDEV(Placeholder, {\n              children: [/*#__PURE__*/_jsxDEV(Placeholder.Header, {\n                children: [/*#__PURE__*/_jsxDEV(Placeholder.Line, {\n                  length: \"very short\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Placeholder.Line, {\n                  length: \"medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Placeholder.Paragraph, {\n                children: /*#__PURE__*/_jsxDEV(Placeholder.Line, {\n                  length: \"short\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: card.header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: card.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: card.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              disabled: voted,\n              onClick: () => [card.id === 1 ? setVoteForA(voteForA + 1) : setVoteForB(voteForB + 1), setVoted(true), setOpen(true)],\n              primary: true,\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: (card.id === 1 && voteForA <= 0 ? true : false) || (card.id === 2 && voteForB <= 0 ? true : false),\n              onClick: () => [card.id === 1 ? setVoteForA(voteForA - 1) : setVoteForB(voteForB - 1), setVoted(false)],\n              children: \"Unvote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, card.header, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        basic: true,\n        onClose: () => setOpen(false),\n        onOpen: () => setOpen(true),\n        open: open,\n        size: \"small\" // trigger={<Button>Basic Modal</Button>}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          icon: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"archive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), \"You are about to vote for this party\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure this party is the best one?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            basic: true,\n            color: \"red\",\n            inverted: true,\n            onClick: () => setOpen(false),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), \" No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"green\",\n            inverted: true,\n            onClick: () => [setOpen(false), submitVote(), setOpenVoted(true)],\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"checkmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), \" Yes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        basic: true,\n        onClose: () => setOpenVoted(false),\n        onOpen: () => setOpenVoted(true),\n        open: openVoted,\n        size: \"small\" // trigger={<Button>Basic Modal</Button>}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          icon: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"archive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this), \"You have voted!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Thanks! Want to see the result now?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            basic: true,\n            color: \"red\",\n            inverted: true,\n            onClick: () => [setOpenVoted(false), setOpen(false), window.location.reload()],\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 13\n            }, this), \" No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/result\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"green\",\n              inverted: true,\n              onClick: () => [setOpenVoted(false), setOpen(false)],\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), \" Yes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Main, \"5aN0N63QN6cHN/jBPgoLpjOY+6g=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/bunny/OneDrive/Desktop/AuthInMern-Authentication-In-MERN/client/src/components/Main/index.jsx"],"names":["React","useEffect","useState","styles","_","set","Button","Card","Divider","Header","Icon","Image","Modal","Placeholder","Link","Main","handleLogout","localStorage","removeItem","window","location","reload","loading","setLoading","voteForA","setVoteForA","voteForB","setVoteForB","voted","setVoted","open","setOpen","openVoted","setOpenVoted","cards","handleLoadingClick","setTimeout","main_container","navbar","white_btn","map","card","avatar","header","date","description","id","submitVote"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from \"./styles.module.css\";\nimport _, { set } from 'lodash';\nimport { Button, Card, Divider, Header, Icon, Image, Modal, Placeholder } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n\nconst Main = () => {\n\tconst handleLogout = () => {\n\t\tlocalStorage.removeItem(\"token\");\n\t\twindow.location.reload();\n\t};\n\n  const [loading, setLoading] = useState(false);\n  const [voteForA, setVoteForA] = useState(0);\n  const [voteForB, setVoteForB] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openVoted, setOpenVoted] = useState(false);\n\n\tconst cards =[\n\t\t{\n\t\t  \"id\": 1,\n\t\t  \"dishName\": \"Lasagne\",\n\t\t  \"description\": \"Breaded fried chicken with waffles, and a side of maple syrup.\",\n\t\t  \"image\": \"https://loremflickr.com/300/300/food\"\n\t\t},\n\t\t{\n\t\t  \"id\": 2,\n\t\t  \"dishName\": \"Pho\",\n\t\t  \"description\": \"Three eggs with cilantro, tomatoes, onions, avocados and melted Emmental cheese. With a side of roasted potatoes, and your choice of toast or croissant.\",\n\t\t  \"image\": \"https://loremflickr.com/300/300/food\"\n\t\t},\n\t  ]\n\n\t//   useEffect(()=>{\n\t// \t  fetch('https://raw.githubusercontent.com/syook/react-dishpoll/main/db.json')\n\t// \t       .then(response =>response.json())\n\t// \t\t   .then(data=>setCards(data))\n\n\t//   })\n\n\n\t const handleLoadingClick = () => {\n\t\tsetLoading(true)\n\t\n\t\tsetTimeout(() => {\n\t\t  setLoading(false)\n\t\t}, 3000)\n\t  }\n\n\t\n\n\treturn (\n\t\t<div className={styles.main_container}>\n\t\t\t<nav className={styles.navbar}>\n\t\t\t\t<h1>Syook</h1>\n\t\t\t\t<button className={styles.white_btn} onClick={handleLogout}>\n\t\t\t\t\tLogout\n\t\t\t\t</button>\n\t\t\t</nav>\n\n\t\t\t<div>\n\t\t\t<div>\n        {voteForA} - {voteForB}\n      </div>\n      <Divider />\n      <Card.Group doubling itemsPerRow={3} stackable>\n        {_.map(cards, (card) => (\n          <Card key={card.header}>\n            {loading ? (\n              <Placeholder>\n                <Placeholder.Image square />\n              </Placeholder>\n            ) : (\n              <Image src={card.avatar} />\n            )}\n\n            <Card.Content>\n              {loading ? (\n                <Placeholder>\n                  <Placeholder.Header>\n                    <Placeholder.Line length=\"very short\" />\n                    <Placeholder.Line length=\"medium\" />\n                  </Placeholder.Header>\n                  <Placeholder.Paragraph>\n                    <Placeholder.Line length=\"short\" />\n                  </Placeholder.Paragraph>\n                </Placeholder>\n              ) : (\n                <>\n                  <Card.Header>{card.header}</Card.Header>\n                  <Card.Meta>{card.date}</Card.Meta>\n                  <Card.Description>{card.description}</Card.Description>\n                </>\n              )}\n            </Card.Content>\n\n            <Card.Content extra>\n              <Button\n                disabled={voted}\n                onClick={() => [\n                  card.id === 1\n                    ? setVoteForA(voteForA + 1)\n                    : setVoteForB(voteForB + 1),\n                  setVoted(true),\n                  setOpen(true),\n                ]}\n                primary\n              >\n                Vote\n              </Button>\n              <Button\n                disabled={\n                  (card.id === 1 && voteForA <= 0 ? true : false) ||\n                  (card.id === 2 && voteForB <= 0 ? true : false)\n                }\n                onClick={() => [\n                  card.id === 1\n                    ? setVoteForA(voteForA - 1)\n                    : setVoteForB(voteForB - 1),\n                  setVoted(false),\n                ]}\n              >\n                Unvote\n              </Button>\n            </Card.Content>\n          </Card>\n        ))}\n      </Card.Group>\n      <Modal\n        basic\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        size=\"small\"\n        // trigger={<Button>Basic Modal</Button>}\n      >\n        <Header icon>\n          <Icon name=\"archive\" />\n          You are about to vote for this party\n        </Header>\n        <Modal.Content>\n          <p>Are you sure this party is the best one?</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Button\n            color=\"green\"\n            inverted\n            onClick={() => [setOpen(false), submitVote(), setOpenVoted(true)]}\n          >\n            <Icon name=\"checkmark\" /> Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n      <Modal\n        basic\n        onClose={() => setOpenVoted(false)}\n        onOpen={() => setOpenVoted(true)}\n        open={openVoted}\n        size=\"small\"\n        // trigger={<Button>Basic Modal</Button>}\n      >\n        <Header icon>\n          <Icon name=\"archive\" />\n          You have voted!\n        </Header>\n        <Modal.Content>\n          <h4>Thanks! Want to see the result now?</h4>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            basic\n            color=\"red\"\n            inverted\n            onClick={() => [\n              setOpenVoted(false),\n              setOpen(false),\n              window.location.reload(),\n            ]}\n          >\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Link to=\"/result\">\n            <Button\n              color=\"green\"\n              inverted\n              onClick={() => [setOpenVoted(false), setOpen(false)]}\n            >\n              <Icon name=\"checkmark\" /> Yes\n            </Button>\n          </Link>\n        </Modal.Actions>\n      </Modal>\n\t\t    </div>\n      \n      \n      \n      \n\n\t\t</div>\n\t);\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}